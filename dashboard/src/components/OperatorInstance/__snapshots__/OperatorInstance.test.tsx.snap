// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`loading spinner matches the snapshot 1`] = `
<section
  className="AppView padding-b-big"
>
  <main>
    <LoadingWrapper
      loaded={false}
      type={0}
    />
  </main>
</section>
`;

exports[`renders a resource renders the resource and CSV info 1`] = `
<section
  className="AppView padding-b-big"
>
  <main>
    <LoadingWrapper
      loaded={true}
      type={0}
    >
      <div
        className="row collapse-b-tablet"
      >
        <div
          className="col-3"
        >
          <CardGrid
            className="ChartInfo"
          >
            <Card>
              <CardIcon
                icon="data:undefined;base64,undefined"
              />
              <CardContent>
                <h5>
                  foo-cluster
                </h5>
                <p
                  className="margin-b-reset"
                />
              </CardContent>
              <CardFooter>
                <div>
                  <div>
                    Cluster Service Version: v
                  </div>
                  <div>
                    Kind: 
                    Foo
                  </div>
                </div>
              </CardFooter>
            </Card>
          </CardGrid>
        </div>
        <div
          className="col-9"
        >
          <div
            className="row padding-t-bigger"
          >
            <div
              className="col-4"
            >
              <Connect(ApplicationStatusSelector)
                daemonsetRefs={Array []}
                deployRefs={
                  Array [
                    ResourceRef {
                      "apiVersion": "apps/v1",
                      "cluster": "default",
                      "filter": Object {
                        "metadata": Object {
                          "ownerReferences": Array [
                            Object {
                              "kind": "Foo",
                              "name": "foo-instance",
                            },
                          ],
                        },
                      },
                      "kind": "Deployment",
                      "name": undefined,
                      "namespace": "default",
                    },
                  ]
                }
                statefulsetRefs={Array []}
              />
            </div>
            <div
              className="col-8 text-r"
            >
              <button
                className="button"
                onClick={[Function]}
              >
                Update
              </button>
              <button
                className="button button-danger"
                onClick={[Function]}
              >
                Delete
              </button>
              <ConfirmDialog
                closeModal={[Function]}
                loading={false}
                modalIsOpen={false}
                onConfirm={[Function]}
              />
            </div>
          </div>
          <Connect(AccessURLTable)
            ingressRefs={Array []}
            serviceRefs={Array []}
          />
          <AppNotes
            notes="alive: true
"
            title="Status"
          />
          <ResourceTable
            resourceRefs={Array []}
            title="Secrets"
          />
          <ResourceTable
            resourceRefs={
              Array [
                ResourceRef {
                  "apiVersion": "apps/v1",
                  "cluster": "default",
                  "filter": Object {
                    "metadata": Object {
                      "ownerReferences": Array [
                        Object {
                          "kind": "Foo",
                          "name": "foo-instance",
                        },
                      ],
                    },
                  },
                  "kind": "Deployment",
                  "name": undefined,
                  "namespace": "default",
                },
              ]
            }
            title="Deployments"
          />
          <ResourceTable
            resourceRefs={Array []}
            title="StatefulSets"
          />
          <ResourceTable
            resourceRefs={Array []}
            title="DaemonSets"
          />
          <ResourceTable
            resourceRefs={Array []}
            title="Services"
          />
          <ResourceTable
            requestOtherResources={true}
            resourceRefs={Array []}
            title="Other Resources"
          />
          <AppValues
            values="test: true
"
          />
        </div>
      </div>
    </LoadingWrapper>
  </main>
</section>
`;
